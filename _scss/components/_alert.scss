@charset "utf-8";
//
// Alert
//

// Parameters
//// Margins and Padding
$margin-y-alert: get-lib-value($element-box-model, margin-y, $size-element-current) !default;
$padding-x-alert: get-lib-value($element-box-model, padding-x, $size-element-current) !default;
$padding-y-alert: get-lib-value($element-box-model, padding-y, $size-element-current) !default;
//// Border
$border-width-alert: get-lib-value($element-box-model, border-width, $size-element-current) !default;
//// Border Radius
$border-radius-alert: get-lib-value($element-box-model, border-radius, $size-element-current) !default;
//// Text
$font-weight-alert-link: get-lib-value($lib-text-style, font-weight, body-text-bold) !default;
//// 变量赋值
$alert-color-level: 6 !default;
$alert-bg-level: -10 !default;
$alert-border-level: -9 !default;
// Calc
$padding-x-alert-dismissible: get-lib-value($lib-text-style, font-size, body-text-#{$size-element-current}) / 2 + $padding-x-alert * 2;
// Mixins
@mixin alert-variant($background, $border, $color) {
  color: $color;
  @include gradient-bg($background);
  border-color: $border;

  hr {
    border-top-color: darken($border, 5%);
  }

  .alert-link {
    color: darken($color, 10%);
  }
}

// Base Style
.alert {
  position: relative;
  padding: $padding-y-alert $padding-x-alert;
  margin-bottom: $margin-y-alert;
  border: $border-width-alert solid transparent;
  @include border-radius($border-radius-alert);
  @include font-size(get-lib-value($lib-text-style, font-size, body-text-#{$size-element-current}));
  line-height: get-lib-value($lib-text-style, line-height, body-text-#{$size-element-current});
}

// Sizing
@each $size in $lib-size-element {
  .alert-#{$size} {
    margin-bottom: get-lib-value($element-box-model, margin-y, $size);
    padding: get-lib-value($element-box-model, padding-y, $size) get-lib-value($element-box-model, padding-x, $size);
    @include font-size(get-lib-value($lib-text-style, font-size, body-text-#{$size}));
    line-height: get-lib-value($lib-text-style, line-height, body-text-#{$size});
    @include border-radius(get-lib-value($element-box-model, border-radius, $size));
  }
}

// Headings for larger alerts
.alert-heading {
  color: inherit;
}

// Provide class for links that match alerts
.alert-link {
  font-weight: $font-weight-alert-link;
}

// Dismissible alerts
.alert-dismissible {
  padding-right: $padding-x-alert-dismissible;
  // Adjust close link position
  .close {
    position: absolute;
    top: 0;
    right: 0;
    padding: $padding-y-alert $padding-x-alert;
    color: inherit;
  }
}

// Interactive styles
@each $color, $value in $lib-color-interactive {
  .alert-#{$color} {
    @include alert-variant(theme-color-level($color, $alert-bg-level), theme-color-level($color, $alert-border-level), theme-color-level($color, $alert-color-level));
  }
}
