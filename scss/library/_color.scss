@charset "utf-8";

// 定义色板数量
$color-palette-series: 8;
// 定义色板的梯度
$color-palette-span: 11;
// 定义颜色变化梯度
$color-palette-hue-step: 2deg;
$color-palette-saturation-step: 12%;
$color-palette-lightness-step: 8%;
// 定义色板颜色计算函数
@function calc-color-palette($color, $i) {
  // 定义变量
  $color-base-mid: ceil($color-palette-span / 2);
  $color-base-i: null;
  @if (lightness($color) == 50%) {
    $color-base-i: $color-base-mid;
  } @else if (lightness($color) > 50%) {
    $color-base-i: $color-base-mid + round((lightness($color) - 50%)/$color-palette-lightness-step);
  } @else {
    $color-base-i: $color-base-mid + round((lightness($color) - 50%)/$color-palette-lightness-step);
  }
  $hue: null;
  $saturation: null;
  $lightness: null;
  // 计算中性灰度颜色
  @if (hue($color) == 0 and saturation($color)==0) {
    $hue: hue($color);
    $saturation: saturation($color);
    @if ($i == $color-base-i) {
      $lightness: lightness($color);
    } @else if ($i < $color-base-i) {
      $lightness: lightness($color) +$color-palette-lightness-step * ($color-base-i - $i) * (1 + $i * 0.05 );
    } @else {
      $lightness: lightness($color) - $color-palette-lightness-step * ($i - $color-base-i) * (1 + $i * 0.05 );
    }
    @return hsl($hue, $saturation, $lightness);
  }
  // 判断冷暖色系，分别计算 Hue 值
  @if (hue($color) >= 60deg and hue($color) <=240deg) {
    @if ($i == $color-base-i) {
      $hue: hue($color);
    } @else if ($i < $color-base-i) {
      $hue: hue($color) - $color-palette-hue-step * ($color-base-i - $i);
    } @else {
      $hue: hue($color) + $color-palette-hue-step * ($i - $color-base-i);
    }
  } @else {
    @if ($i == $color-base-i) {
      $hue: hue($color);
    } @else if ($i < $color-base-i) {
      $hue: hue($color) + $color-palette-hue-step * ($color-base-i - $i);
    } @else {
      $hue: hue($color) - $color-palette-hue-step * ($i - $color-base-i);
    }
  }
  // 修正 Hue 值的边界
  @if ($hue < 0) {
    $hue: $hue +360deg;
  } @else if ($hue >= 360deg) {
    $hue: $hue - 360deg;
  }
  // 计算 Saturation 值
  @if ($i == $color-base-i) {
    $saturation: saturation($color);
  } @else if ($i < $color-base-i) {
    $saturation: saturation($color) - $color-palette-saturation-step * ($color-base-i - $i) * (1 + $i * 0.04 );
  } @else {
    $saturation: saturation($color) + $color-palette-saturation-step * ($i - $color-base-i) * (1 + $i * 0.06 );
  }
  // 修正 Saturation 值的边界
  @if ($saturation > 100) {
    $saturation: 100;
  }
  @if ($saturation < 0) {
    $saturation: 0;
  }
  // 计算 Lightness 值
  @if ($i==$color-base-i) {
    $lightness: lightness($color);
  } @else if ($i<$color-base-i) {
    $lightness: lightness($color) + $color-palette-lightness-step * ($color-base-i - $i) * (1 + $i * 0.04 );
  } @else {
    $lightness: lightness($color) - $color-palette-lightness-step * ($i - $color-base-i) * (1 + $i * 0.06 );
  }
  // 修正 Lightness 值的边界
  @if ($lightness <0) {
    $lightness: 0;
  }
  @if ($lightness>=100) {
    $lightness: 100;
  }
  @return hsl($hue, $saturation, $lightness);
}

// 彩色基本色
$color-base-red: hsl(0, 100, 51);
$color-base-orange: hsl(28, 100, 53);
$color-base-yellow: hsl(54, 100, 53);
$color-base-lime: hsl(90, 96, 48);
$color-base-green: hsl(120, 92, 52);
$color-base-spring: hsl(154, 96, 46);
$color-base-cyan: hsl(182, 100, 46);
$color-base-azure: hsl(210, 100, 52);
$color-base-blue: hsl(240, 98, 53);
$color-base-violet: hsl(272, 100, 48);
$color-base-magenta: hsl(300, 100, 46);
$color-base-rose: hsl(330, 100, 48);
// 灰色基本色
$color-base-gray-cool: hsl(210, 6, 48);
$color-base-gray: hsl(0, 0, 50);
$color-base-gray-warm: hsl(15, 4, 52);
// 品牌色
$color-brand: hsl(24, 88, 40);

$lib-color-base: (
        red:$color-base-red,
        orange:$color-base-orange,
        yellow:$color-base-yellow,
        lime:$color-base-lime,
        green:$color-base-green,
        spring:$color-base-spring,
        cyan:$color-base-cyan,
        azure:$color-base-azure,
        blue:$color-base-blue,
        violet:$color-base-violet,
        magenta:$color-base-magenta,
        rose:$color-base-rose,
        gray-cool:$color-base-gray-cool,
        gray-warm:$color-base-gray-warm,
        gray:$color-base-gray
);
// Color Swatches
$lib-color-swatch: (
        'red' :(
                10 :calc-color-palette($color-base-red, 1),
                20 :calc-color-palette($color-base-red, 2),
                30 :calc-color-palette($color-base-red, 3),
                40 :calc-color-palette($color-base-red, 4),
                50 :calc-color-palette($color-base-red, 5),
                60 :calc-color-palette($color-base-red, 6),
                70 :calc-color-palette($color-base-red, 7),
                80 :calc-color-palette($color-base-red, 8),
                90 :calc-color-palette($color-base-red, 9),
                100 :calc-color-palette($color-base-red, 10)
        ),
        'orange' :(
                10 :calc-color-palette($color-base-orange, 1),
                20 :calc-color-palette($color-base-orange, 2),
                30 :calc-color-palette($color-base-orange, 3),
                40 :calc-color-palette($color-base-orange, 4),
                50 :calc-color-palette($color-base-orange, 5),
                60 :calc-color-palette($color-base-orange, 6),
                70 :calc-color-palette($color-base-orange, 7),
                80 :calc-color-palette($color-base-orange, 8),
                90 :calc-color-palette($color-base-orange, 9),
                100 :calc-color-palette($color-base-orange, 10)
        ),
        'yellow' :(
                10 :calc-color-palette($color-base-yellow, 1),
                20 :calc-color-palette($color-base-yellow, 2),
                30 :calc-color-palette($color-base-yellow, 3),
                40 :calc-color-palette($color-base-yellow, 4),
                50 :calc-color-palette($color-base-yellow, 5),
                60 :calc-color-palette($color-base-yellow, 6),
                70 :calc-color-palette($color-base-yellow, 7),
                80 :calc-color-palette($color-base-yellow, 8),
                90 :calc-color-palette($color-base-yellow, 9),
                100 :calc-color-palette($color-base-yellow, 10)
        ),
        'lime' :(
                10 :calc-color-palette($color-base-lime, 1),
                20 :calc-color-palette($color-base-lime, 2),
                30 :calc-color-palette($color-base-lime, 3),
                40 :calc-color-palette($color-base-lime, 4),
                50 :calc-color-palette($color-base-lime, 5),
                60 :calc-color-palette($color-base-lime, 6),
                70 :calc-color-palette($color-base-lime, 7),
                80 :calc-color-palette($color-base-lime, 8),
                90 :calc-color-palette($color-base-lime, 9),
                100 :calc-color-palette($color-base-lime, 10)
        ),
        'green' :(
                10 :calc-color-palette($color-base-green, 1),
                20 :calc-color-palette($color-base-green, 2),
                30 :calc-color-palette($color-base-green, 3),
                40 :calc-color-palette($color-base-green, 4),
                50 :calc-color-palette($color-base-green, 5),
                60 :calc-color-palette($color-base-green, 6),
                70 :calc-color-palette($color-base-green, 7),
                80 :calc-color-palette($color-base-green, 8),
                90 :calc-color-palette($color-base-green, 9),
                100 :calc-color-palette($color-base-green, 10)
        ),
        'spring' :(
                10 :calc-color-palette($color-base-spring, 1),
                20 :calc-color-palette($color-base-spring, 2),
                30 :calc-color-palette($color-base-spring, 3),
                40 :calc-color-palette($color-base-spring, 4),
                50 :calc-color-palette($color-base-spring, 5),
                60 :calc-color-palette($color-base-spring, 6),
                70 :calc-color-palette($color-base-spring, 7),
                80 :calc-color-palette($color-base-spring, 8),
                90 :calc-color-palette($color-base-spring, 9),
                100 :calc-color-palette($color-base-spring, 10)
        ),
        'cyan' :(
                10 :calc-color-palette($color-base-cyan, 1),
                20 :calc-color-palette($color-base-cyan, 2),
                30 :calc-color-palette($color-base-cyan, 3),
                40 :calc-color-palette($color-base-cyan, 4),
                50 :calc-color-palette($color-base-cyan, 5),
                60 :calc-color-palette($color-base-cyan, 6),
                70 :calc-color-palette($color-base-cyan, 7),
                80 :calc-color-palette($color-base-cyan, 8),
                90 :calc-color-palette($color-base-cyan, 9),
                100 :calc-color-palette($color-base-cyan, 10)
        ),
        'azure' :(
                10 :calc-color-palette($color-base-azure, 1),
                20 :calc-color-palette($color-base-azure, 2),
                30 :calc-color-palette($color-base-azure, 3),
                40 :calc-color-palette($color-base-azure, 4),
                50 :calc-color-palette($color-base-azure, 5),
                60 :calc-color-palette($color-base-azure, 6),
                70 :calc-color-palette($color-base-azure, 7),
                80 :calc-color-palette($color-base-azure, 8),
                90 :calc-color-palette($color-base-azure, 9),
                100 :calc-color-palette($color-base-azure, 10)
        ),
        'blue' :(
                10 :calc-color-palette($color-base-blue, 1),
                20 :calc-color-palette($color-base-blue, 2),
                30 :calc-color-palette($color-base-blue, 3),
                40 :calc-color-palette($color-base-blue, 4),
                50 :calc-color-palette($color-base-blue, 5),
                60 :calc-color-palette($color-base-blue, 6),
                70 :calc-color-palette($color-base-blue, 7),
                80 :calc-color-palette($color-base-blue, 8),
                90 :calc-color-palette($color-base-blue, 9),
                100 :calc-color-palette($color-base-blue, 10)
        ),
        'violet' :(
                10 :calc-color-palette($color-base-violet, 1),
                20 :calc-color-palette($color-base-violet, 2),
                30 :calc-color-palette($color-base-violet, 3),
                40 :calc-color-palette($color-base-violet, 4),
                50 :calc-color-palette($color-base-violet, 5),
                60 :calc-color-palette($color-base-violet, 6),
                70 :calc-color-palette($color-base-violet, 7),
                80 :calc-color-palette($color-base-violet, 8),
                90 :calc-color-palette($color-base-violet, 9),
                100 :calc-color-palette($color-base-violet, 10)
        ),
        'magenta' :(
                10 :calc-color-palette($color-base-magenta, 1),
                20 :calc-color-palette($color-base-magenta, 2),
                30 :calc-color-palette($color-base-magenta, 3),
                40 :calc-color-palette($color-base-magenta, 4),
                50 :calc-color-palette($color-base-magenta, 5),
                60 :calc-color-palette($color-base-magenta, 6),
                70 :calc-color-palette($color-base-magenta, 7),
                80 :calc-color-palette($color-base-magenta, 8),
                90 :calc-color-palette($color-base-magenta, 9),
                100 :calc-color-palette($color-base-magenta, 10)
        ),
        'rose' :(
                10 :calc-color-palette($color-base-rose, 1),
                20 :calc-color-palette($color-base-rose, 2),
                30 :calc-color-palette($color-base-rose, 3),
                40 :calc-color-palette($color-base-rose, 4),
                50 :calc-color-palette($color-base-rose, 5),
                60 :calc-color-palette($color-base-rose, 6),
                70 :calc-color-palette($color-base-rose, 7),
                80 :calc-color-palette($color-base-rose, 8),
                90 :calc-color-palette($color-base-rose, 9),
                100 :calc-color-palette($color-base-rose, 10)
        ),
        'gray' :(
                10 :calc-color-palette($color-base-gray, 1),
                20 :calc-color-palette($color-base-gray, 2),
                30 :calc-color-palette($color-base-gray, 3),
                40 :calc-color-palette($color-base-gray, 4),
                50 :calc-color-palette($color-base-gray, 5),
                60 :calc-color-palette($color-base-gray, 6),
                70 :calc-color-palette($color-base-gray, 7),
                80 :calc-color-palette($color-base-gray, 8),
                90 :calc-color-palette($color-base-gray, 9),
                100 :calc-color-palette($color-base-gray, 10)
        ),
        'gray-cool' :(
                10 :calc-color-palette($color-base-gray-cool, 1),
                20 :calc-color-palette($color-base-gray-cool, 2),
                30 :calc-color-palette($color-base-gray-cool, 3),
                40 :calc-color-palette($color-base-gray-cool, 4),
                50 :calc-color-palette($color-base-gray-cool, 5),
                60 :calc-color-palette($color-base-gray-cool, 6),
                70 :calc-color-palette($color-base-gray-cool, 7),
                80 :calc-color-palette($color-base-gray-cool, 8),
                90 :calc-color-palette($color-base-gray-cool, 9),
                100 :calc-color-palette($color-base-gray-cool, 10)
        ),
        'gray-warm' :(
                10 :calc-color-palette($color-base-gray-warm, 1),
                20 :calc-color-palette($color-base-gray-warm, 2),
                30 :calc-color-palette($color-base-gray-warm, 3),
                40 :calc-color-palette($color-base-gray-warm, 4),
                50 :calc-color-palette($color-base-gray-warm, 5),
                60 :calc-color-palette($color-base-gray-warm, 6),
                70 :calc-color-palette($color-base-gray-warm, 7),
                80 :calc-color-palette($color-base-gray-warm, 8),
                90 :calc-color-palette($color-base-gray-warm, 9),
                100 :calc-color-palette($color-base-gray-warm, 10)
        ),
        'black' :(
                100:#000
        ),
        'white' :(
                100:#fff
        )
) !default;
// Theme Palette
$lib-theme-palette: (
  // Theme White
        'white' :(
          // 背景色
                ui-background: get-lib-value($lib-color-swatch, 'white', 100), // 默认页面背景颜色;
          // 交互色
                interactive-01: get-lib-value($lib-color-swatch, 'blue', 50), // 交互色01：交互色-主要，主要按钮颜色
                interactive-02: get-lib-value($lib-color-swatch, 'gray-cool', 60), // 交互色02：交互色-次要，次要按钮颜色
                interactive-03: get-lib-value($lib-color-swatch, 'azure', 60), // 交互色03：交互色-辅助，辅助按钮颜色，4.5:1 AA
                interactive-04: get-lib-value($lib-color-swatch, 'blue', 80), // 交互色04：交互色-，激活状态，3:1 AA
                danger: get-lib-value($lib-color-swatch, 'red', 70), // 危险色：危险操作按钮背景颜色，3:1 AA
          // UI色
                ui-01: get-lib-value($lib-color-swatch, 'gray', 10), // UI色01：默认页面背景颜色上方容器背景色，次要页面背景颜色
                ui-02: get-lib-value($lib-color-swatch, 'white', 100), // UI色02：UI色01上方容器背景颜色
                ui-03: get-lib-value($lib-color-swatch, 'gray', 30), // UI色03：辅助背景颜色，不显著边框颜色
                ui-04: get-lib-value($lib-color-swatch, 'gray', 50), // UI色04：中度对比边框颜色，3:1 AA
                ui-05: get-lib-value($lib-color-swatch, 'gray', 100), // UI色05：高对比度边框颜色，强调元素，4.5:1 AA
          // 文本色
                text-01: get-lib-value($lib-color-swatch, 'gray', 100), // 文本色01：主要文本颜色，标题颜色，text-02悬停文本颜色
                text-02: get-lib-value($lib-color-swatch, 'gray', 80), // 文本色02：次要文本颜色，表单标签颜色
                text-03: get-lib-value($lib-color-swatch, 'gray', 40), // 文本色03：占位文本颜色
                text-04: get-lib-value($lib-color-swatch, 'white', 100), // 文本色04：交互色背景的文本颜色
                text-05: get-lib-value($lib-color-swatch, 'gray', 60), // 文本色05：辅助文本颜色，帮助提示文本颜色
                link-01: get-lib-value($lib-color-swatch, 'blue', 60), // 链接色01：主要超链接颜色，无框按钮文本颜色
                inverse-link: get-lib-value($lib-color-swatch, 'blue', 40), // 反转链接色：inverse-02背景的超链接颜色
          // 图标色
                icon-01: get-lib-value($lib-color-swatch, 'gray', 100), // 图标色01：主要图标颜色
                icon-02: get-lib-value($lib-color-swatch, 'gray', 80), // 图标色02：次要图标颜色
                icon-03: get-lib-value($lib-color-swatch, 'white', 100), // 图标色03：交互色背景的图标颜色，非UI背景色的图标颜色
                field-01: get-lib-value($lib-color-swatch, 'gray', 10), // 控件背景色01：默认表单元件背景色，ui-background上方控件背景颜色
                field-02: get-lib-value($lib-color-swatch, 'white', 100), // 控件背景色02：ui-02背景颜色上方控件背景颜色
                inverse-01: get-lib-value($lib-color-swatch, 'white', 100), // 反转色01：反转文本色、图标色
                inverse-02: get-lib-value($lib-color-swatch, 'gray', 80), // 反转色02：高对比背景色，高对比元素
          //
                support-01: get-lib-value($lib-color-swatch, 'red', 50), // 支持色01：错误色;
                support-02: get-lib-value($lib-color-swatch, 'green', 70), // 支持色02：成功色;
                support-03: get-lib-value($lib-color-swatch, 'yellow', 60), // 支持色03：警告色;
                support-04: get-lib-value($lib-color-swatch, 'azure', 60), // 支持色04：信息色;
                inverse-support-01: get-lib-value($lib-color-swatch, 'red', 60), // 反转支持色01：高对比时的错误色
                inverse-support-02: get-lib-value($lib-color-swatch, 'green', 70), // 反转支持色02：高对比时的成功色
                inverse-support-03: get-lib-value($lib-color-swatch, 'yellow', 60), // 反转支持色03：高对比时的警告色
                inverse-support-04: get-lib-value($lib-color-swatch, 'blue', 50), // 反转支持色04：高对比时的信息色
          //
                overlay-01: rgba(get-lib-value($lib-color-swatch, 'gray', 100), .5), // 覆盖色01：背景覆盖色
                focus: get-lib-value($lib-color-swatch, 'blue', 60), // 聚焦色：聚焦边框色，聚焦下划线颜色
                inverse-focus-ui: get-lib-value($lib-color-swatch, 'white', 100), // 高对比时的聚焦色
          // 鼠标悬停色
                hover-primary: calc-hover-color(get-lib-value($lib-color-swatch, 'blue', 60)), // 主悬停色：interactive-01悬停色，Blue 60 hover
                hover-primary-text: get-lib-value($lib-color-swatch, 'blue', 70), // 主要文本悬停色：interactive-01文本悬停色
                hover-secondary: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 80)), // 次要悬停色：interactive-02悬停色，Gray 80 hover
                hover-tertiary: calc-hover-color(get-lib-value($lib-color-swatch, 'blue', 60)), // 辅助悬停色：interactive-03、inverse-01悬停色，Blue 60 hover
                hover-ui: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 10)), // UI悬停色：ui-01、ui-02、透明背景悬停色，Gray 10 hover
                hover-selected-ui: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 20)), // 选中UI悬停色：选中表格行悬停色，Gray 20 hover
                hover-danger: calc-hover-color(get-lib-value($lib-color-swatch, 'red', 60)), // 危险操作悬停色：危险操作悬停色，support-01悬停色，Red 60 hover
                hover-row: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 10)), // 表格行悬停色：表格行悬停色，Gray 10 hover
                inverse-hover-ui: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 80)), // 反转UI悬停色：inverse-02悬停色，Gray 80 hover
          // 激活色
                active-primary: get-lib-value($lib-color-swatch, 'blue', 80), // 主要激活色：interactive-01激活色
                active-secondary: get-lib-value($lib-color-swatch, 'gray', 60), // 次要激活色：interactive-02、inverse-01激活色
                active-tertiary: get-lib-value($lib-color-swatch, 'blue', 80), // 辅助激活色：interactive-03激活色
                active-ui: get-lib-value($lib-color-swatch, 'gray', 30), // UI激活色：ui-01，ui-02激活色
                active-danger: get-lib-value($lib-color-swatch, 'red', 80), //危险激活色：danger，support-01激活色
                selected-ui: get-lib-value($lib-color-swatch, 'gray', 20), // UI选中色：选中的UI元素颜色
                highlight: get-lib-value($lib-color-swatch, 'blue', 20), // 高亮色：interactive-01高亮色
          // 骨架系统色
                skeleton-01: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 10)), // 骨架色01：骨架状态的图像色，Gray 10 hover
                skeleton-02: get-lib-value($lib-color-swatch, 'gray', 30), // 骨架色02：骨架状态的文本色
          //
                visited-link: get-lib-value($lib-color-swatch, 'violet', 60), // 已访问链接色：已访问的链接颜色
                disabled-01: get-lib-value($lib-color-swatch, 'gray', 10), // 失活色01：失活控件，失活背景色，失活边框色
                disabled-02: get-lib-value($lib-color-swatch, 'gray', 30), // 失活色02：disabled-01上方的失活元素，失活标签色，disabled-01上方失活文本色，失活图标色，失活边框色
                disabled-03: get-lib-value($lib-color-swatch, 'gray', 50) // 失活色03：disabled-02上方失活文本色，disabled-02上方失活图标色
        ),
  // Theme Light
        'light' :(
                ui-background: get-lib-value($lib-color-swatch, 'gray', 10), // 默认页面背景颜色;
                interactive-01: get-lib-value($lib-color-swatch, 'blue', 60), // 交互色01：交互色-主要，主要按钮颜色
                interactive-02: get-lib-value($lib-color-swatch, 'gray', 80), // 交互色02：交互色-次要，次要按钮颜色
                interactive-03: get-lib-value($lib-color-swatch, 'blue', 60), // 交互色03：交互色-辅助，辅助按钮颜色，4.5:1 AA
                interactive-04: get-lib-value($lib-color-swatch, 'blue', 60), // 交互色04：交互色-，激活状态，3:1 AA
                danger: get-lib-value($lib-color-swatch, 'red', 60), // 危险色：危险操作按钮背景颜色，3:1 AA
                ui-01: get-lib-value($lib-color-swatch, 'white', 100), // UI色01：默认页面背景颜色上方容器背景色，次要页面背景颜色
                ui-02: get-lib-value($lib-color-swatch, 'gray', 10), // UI色02：UI色01上方容器背景颜色
                ui-03: get-lib-value($lib-color-swatch, 'gray', 20), // UI色03：辅助背景颜色，不显著边框颜色
                ui-04: get-lib-value($lib-color-swatch, 'gray', 50), // UI色04：中度对比边框颜色，3:1 AA
                ui-05: get-lib-value($lib-color-swatch, 'gray', 100), // UI色05：高对比度边框颜色，强调元素，4.5:1 AA
                text-01: get-lib-value($lib-color-swatch, 'gray', 100), // 文本色01：主要文本颜色，标题颜色，text-02悬停文本颜色
                text-02: get-lib-value($lib-color-swatch, 'gray', 80), // 文本色02：次要文本颜色，表单标签颜色
                text-03: get-lib-value($lib-color-swatch, 'gray', 40), // 文本色03：占位文本颜色
                text-04: get-lib-value($lib-color-swatch, 'white', 100), // 文本色04：交互色背景的文本颜色
                text-05: get-lib-value($lib-color-swatch, 'gray', 60), // 文本色05：辅助文本颜色，帮助提示文本颜色
                link-01: get-lib-value($lib-color-swatch, 'blue', 60), // 链接色01：主要超链接颜色，无框按钮文本颜色
                inverse-link: get-lib-value($lib-color-swatch, 'blue', 40), // 反转链接色：inverse-02背景的超链接颜色
                icon-01: get-lib-value($lib-color-swatch, 'gray', 100), // 图标色01：主要图标颜色
                icon-02: get-lib-value($lib-color-swatch, 'gray', 70), // 图标色02：次要图标颜色
                icon-03: get-lib-value($lib-color-swatch, 'white', 100), // 图标色03：交互色背景的图标颜色，非UI背景色的图标颜色
                field-01: get-lib-value($lib-color-swatch, 'white', 100), // 控件背景色01：默认表单元件背景色，ui-background上方控件背景颜色
                field-02: get-lib-value($lib-color-swatch, 'gray', 10), // 控件背景色02：ui-02背景颜色上方控件背景颜色
                inverse-01: get-lib-value($lib-color-swatch, 'white', 100), // 反转色01：反转文本色、图标色
                inverse-02: get-lib-value($lib-color-swatch, 'gray', 80), // 反转色02：高对比背景色，高对比元素
                support-01: get-lib-value($lib-color-swatch, 'red', 60), // 支持色01：错误色;
                support-02: get-lib-value($lib-color-swatch, 'green', 50), // 支持色02：成功色;
                support-03: get-lib-value($lib-color-swatch, 'yellow', 30), // 支持色03：警告色;
                support-04: get-lib-value($lib-color-swatch, 'blue', 70), // 支持色04：信息色;
                inverse-support-01: get-lib-value($lib-color-swatch, 'red', 50), // 反转支持色01：高对比时的错误色
                inverse-support-02: get-lib-value($lib-color-swatch, 'green', 40), // 反转支持色02：高对比时的成功色
                inverse-support-03: get-lib-value($lib-color-swatch, 'yellow', 30), // 反转支持色03：高对比时的警告色
                inverse-support-04: get-lib-value($lib-color-swatch, 'blue', 50), // 反转支持色04：高对比时的信息色
                overlay-01: rgba(get-lib-value($lib-color-swatch, 'gray', 100), .5), // 覆盖色01：背景覆盖色
                focus: get-lib-value($lib-color-swatch, 'blue', 60), // 聚焦色：聚焦边框色，聚焦下划线颜色
                inverse-focus-ui: get-lib-value($lib-color-swatch, 'white', 100), // 高对比时的聚焦色
                hover-primary: calc-hover-color(get-lib-value($lib-color-swatch, 'blue', 60)), // 主悬停色：interactive-01悬停色，Blue 60 hover
                hover-primary-text: get-lib-value($lib-color-swatch, 'blue', 70), // 主要文本悬停色：interactive-01文本悬停色
                hover-secondary: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 80)), // 次要悬停色：interactive-02悬停色，Gray 80 hover
                hover-tertiary: calc-hover-color(get-lib-value($lib-color-swatch, 'blue', 60)), // 辅助悬停色：interactive-03、inverse-01悬停色，Blue 60 hover
                hover-ui: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 10)), // UI悬停色：ui-01、ui-02、透明背景悬停色，Gray 10 hover
                hover-selected-ui: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 20)), // 选中UI悬停色：选中表格行悬停色，Gray 20 hover
                hover-danger: calc-hover-color(get-lib-value($lib-color-swatch, 'red', 60)), // 危险操作悬停色：危险操作悬停色，support-01悬停色，Red 60 hover
                hover-row: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 10)), // 表格行悬停色：表格行悬停色，Gray 10 hover
                inverse-hover-ui: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 80)), // 反转UI悬停色：inverse-02悬停色，Gray 80 hover
                active-primary: get-lib-value($lib-color-swatch, 'blue', 80), // 主要激活色：interactive-01激活色
                active-secondary: get-lib-value($lib-color-swatch, 'gray', 60), // 次要激活色：interactive-02、inverse-01激活色
                active-tertiary: get-lib-value($lib-color-swatch, 'blue', 80), // 辅助激活色：interactive-03激活色
                active-ui: get-lib-value($lib-color-swatch, 'gray', 30), // UI激活色：ui-01，ui-02激活色
                active-danger: get-lib-value($lib-color-swatch, 'red', 80), //危险激活色：danger，support-01激活色
                selected-ui: get-lib-value($lib-color-swatch, 'gray', 20), // UI选中色：选中的UI元素颜色
                highlight: get-lib-value($lib-color-swatch, 'blue', 10), // 高亮色：interactive-01高亮色
                skeleton-01: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 10)), // 骨架色01：骨架状态的图像色，Gray 10 hover
                skeleton-02: get-lib-value($lib-color-swatch, 'gray', 30), // 骨架色02：骨架状态的文本色
                visited-link: get-lib-value($lib-color-swatch, 'violet', 60), // 已访问链接色：已访问的链接颜色
                disabled-01: get-lib-value($lib-color-swatch, 'white', 100), // 失活色01：失活控件，失活背景色，失活边框色
                disabled-02: get-lib-value($lib-color-swatch, 'gray', 30), // 失活色02：disabled-01上方的失活元素，失活标签色，disabled-01上方失活文本色，失活图标色，失活边框色
                disabled-03: get-lib-value($lib-color-swatch, 'gray', 50) // 失活色03：disabled-02上方失活文本色，disabled-02上方失活图标色
        ),
  // Theme Dark
        'dark' :(
                ui-background: get-lib-value($lib-color-swatch, 'gray', 90), // 默认页面背景颜色;
                interactive-01: get-lib-value($lib-color-swatch, 'blue', 60), // 交互色01：交互色-主要，主要按钮颜色
                interactive-02: get-lib-value($lib-color-swatch, 'gray', 60), // 交互色02：交互色-次要，次要按钮颜色
                interactive-03: get-lib-value($lib-color-swatch, 'white', 100), // 交互色03：交互色-辅助，辅助按钮颜色，4.5:1 AA
                interactive-04: get-lib-value($lib-color-swatch, 'blue', 50), // 交互色04：交互色-，激活状态，3:1 AA
                danger: get-lib-value($lib-color-swatch, 'red', 60), // 危险色：危险操作按钮背景颜色，3:1 AA
                ui-01: get-lib-value($lib-color-swatch, 'gray', 80), // UI色01：默认页面背景颜色上方容器背景色，次要页面背景颜色
                ui-02: get-lib-value($lib-color-swatch, 'gray', 70), // UI色02：UI色01上方容器背景颜色
                ui-03: get-lib-value($lib-color-swatch, 'gray', 70), // UI色03：辅助背景颜色，不显著边框颜色
                ui-04: get-lib-value($lib-color-swatch, 'gray', 60), // UI色04：中度对比边框颜色，3:1 AA
                ui-05: get-lib-value($lib-color-swatch, 'gray', 10), // UI色05：高对比度边框颜色，强调元素，4.5:1 AA
                text-01: get-lib-value($lib-color-swatch, 'gray', 10), // 文本色01：主要文本颜色，标题颜色，text-02悬停文本颜色
                text-02: get-lib-value($lib-color-swatch, 'gray', 30), // 文本色02：次要文本颜色，表单标签颜色
                text-03: get-lib-value($lib-color-swatch, 'gray', 60), // 文本色03：占位文本颜色
                text-04: get-lib-value($lib-color-swatch, 'white', 100), // 文本色04：交互色背景的文本颜色
                text-05: get-lib-value($lib-color-swatch, 'gray', 50), // 文本色05：辅助文本颜色，帮助提示文本颜色
                link-01: get-lib-value($lib-color-swatch, 'blue', 40), // 链接色01：主要超链接颜色，无框按钮文本颜色
                inverse-link: get-lib-value($lib-color-swatch, 'blue', 60), // 反转链接色：inverse-02背景的超链接颜色
                icon-01: get-lib-value($lib-color-swatch, 'gray', 10), // 图标色01：主要图标颜色
                icon-02: get-lib-value($lib-color-swatch, 'gray', 30), // 图标色02：次要图标颜色
                icon-03: get-lib-value($lib-color-swatch, 'white', 100), // 图标色03：交互色背景的图标颜色，非UI背景色的图标颜色
                field-01: get-lib-value($lib-color-swatch, 'gray', 80), // 控件背景色01：默认表单元件背景色，ui-background上方控件背景颜色
                field-02: get-lib-value($lib-color-swatch, 'gray', 70), // 控件背景色02：ui-02背景颜色上方控件背景颜色
                inverse-01: get-lib-value($lib-color-swatch, 'gray', 100), // 反转色01：反转文本色、图标色
                inverse-02: get-lib-value($lib-color-swatch, 'gray', 10), // 反转色02：高对比背景色，高对比元素
                support-01: get-lib-value($lib-color-swatch, 'red', 50), // 支持色01：错误色;
                support-02: get-lib-value($lib-color-swatch, 'green', 40), // 支持色02：成功色;
                support-03: get-lib-value($lib-color-swatch, 'yellow', 30), // 支持色03：警告色;
                support-04: get-lib-value($lib-color-swatch, 'blue', 50), // 支持色04：信息色;
                inverse-support-01: get-lib-value($lib-color-swatch, 'red', 60), // 反转支持色01：高对比时的错误色
                inverse-support-02: get-lib-value($lib-color-swatch, 'green', 50), // 反转支持色02：高对比时的成功色
                inverse-support-03: get-lib-value($lib-color-swatch, 'yellow', 30), // 反转支持色03：高对比时的警告色
                inverse-support-04: get-lib-value($lib-color-swatch, 'blue', 70), // 反转支持色04：高对比时的信息色
                overlay-01: rgba(get-lib-value($lib-color-swatch, 'gray', 100), .7), // 覆盖色01：背景覆盖色
                focus: get-lib-value($lib-color-swatch, 'white', 100), // 聚焦色：聚焦边框色，聚焦下划线颜色
                inverse-focus-ui: get-lib-value($lib-color-swatch, 'blue', 60), // 高对比时的聚焦色
                hover-primary: calc-hover-color(get-lib-value($lib-color-swatch, 'blue', 60)), // 主悬停色：interactive-01悬停色，Blue 60 hover
                hover-primary-text: get-lib-value($lib-color-swatch, 'blue', 70), // 主要文本悬停色：interactive-01文本悬停色
                hover-secondary: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 60)), // 次要悬停色：interactive-02悬停色，Gray 80 hover
                hover-tertiary: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 10)), // 辅助悬停色：interactive-03、inverse-01悬停色，Blue 60 hover
                hover-ui: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 80)), // UI悬停色：ui-01、ui-02、透明背景悬停色，Gray 10 hover
                hover-selected-ui: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 70)), // 选中UI悬停色：选中表格行悬停色，Gray 20 hover
                hover-danger: calc-hover-color(get-lib-value($lib-color-swatch, 'red', 60)), // 危险操作悬停色：危险操作悬停色，support-01悬停色，Red 60 hover
                hover-row: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 80)), // 表格行悬停色：表格行悬停色，Gray 10 hover
                inverse-hover-ui: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 10)), // 反转UI悬停色：inverse-02悬停色，Gray 80 hover
                active-primary: get-lib-value($lib-color-swatch, 'blue', 80), // 主要激活色：interactive-01激活色
                active-secondary: get-lib-value($lib-color-swatch, 'gray', 80), // 次要激活色：interactive-02、inverse-01激活色
                active-tertiary: get-lib-value($lib-color-swatch, 'gray', 30), // 辅助激活色：interactive-03激活色
                active-ui: get-lib-value($lib-color-swatch, 'gray', 60), // UI激活色：ui-01，ui-02激活色
                active-danger: get-lib-value($lib-color-swatch, 'red', 80), //危险激活色：danger，support-01激活色
                selected-ui: get-lib-value($lib-color-swatch, 'gray', 70), // UI选中色：选中的UI元素颜色
                highlight: get-lib-value($lib-color-swatch, 'blue', 80), // 高亮色：interactive-01高亮色
                skeleton-01: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 80)), // 骨架色01：骨架状态的图像色，Gray 10 hover
                skeleton-02: get-lib-value($lib-color-swatch, 'gray', 70), // 骨架色02：骨架状态的文本色
                visited-link: get-lib-value($lib-color-swatch, 'violet', 40), // 已访问链接色：已访问的链接颜色
                disabled-01: get-lib-value($lib-color-swatch, 'gray', 80), // 失活色01：失活控件，失活背景色，失活边框色
                disabled-02: get-lib-value($lib-color-swatch, 'gray', 70), // 失活色02：disabled-01上方的失活元素，失活标签色，disabled-01上方失活文本色，失活图标色，失活边框色
                disabled-03: get-lib-value($lib-color-swatch, 'gray', 50) // 失活色03：disabled-02上方失活文本色，disabled-02上方失活图标色
        ),
  // Theme Black
        'black' :(
                ui-background: get-lib-value($lib-color-swatch, 'gray', 100), // 默认页面背景颜色;
                interactive-01: get-lib-value($lib-color-swatch, 'blue', 60), // 交互色01：交互色-主要，主要按钮颜色
                interactive-02: get-lib-value($lib-color-swatch, 'gray', 60), // 交互色02：交互色-次要，次要按钮颜色
                interactive-03: get-lib-value($lib-color-swatch, 'white', 100), // 交互色03：交互色-辅助，辅助按钮颜色，4.5:1 AA
                interactive-04: get-lib-value($lib-color-swatch, 'blue', 50), // 交互色04：交互色-，激活状态，3:1 AA
                danger: get-lib-value($lib-color-swatch, 'red', 60), // 危险色：危险操作按钮背景颜色，3:1 AA
                ui-01: get-lib-value($lib-color-swatch, 'gray', 90), // UI色01：默认页面背景颜色上方容器背景色，次要页面背景颜色
                ui-02: get-lib-value($lib-color-swatch, 'gray', 80), // UI色02：UI色01上方容器背景颜色
                ui-03: get-lib-value($lib-color-swatch, 'gray', 80), // UI色03：辅助背景颜色，不显著边框颜色
                ui-04: get-lib-value($lib-color-swatch, 'gray', 60), // UI色04：中度对比边框颜色，3:1 AA
                ui-05: get-lib-value($lib-color-swatch, 'gray', 10), // UI色05：高对比度边框颜色，强调元素，4.5:1 AA
                text-01: get-lib-value($lib-color-swatch, 'gray', 10), // 文本色01：主要文本颜色，标题颜色，text-02悬停文本颜色
                text-02: get-lib-value($lib-color-swatch, 'gray', 30), // 文本色02：次要文本颜色，表单标签颜色
                text-03: get-lib-value($lib-color-swatch, 'gray', 60), // 文本色03：占位文本颜色
                text-04: get-lib-value($lib-color-swatch, 'white', 100), // 文本色04：交互色背景的文本颜色
                text-05: get-lib-value($lib-color-swatch, 'gray', 50), // 文本色05：辅助文本颜色，帮助提示文本颜色
                link-01: get-lib-value($lib-color-swatch, 'blue', 40), // 链接色01：主要超链接颜色，无框按钮文本颜色
                inverse-link: get-lib-value($lib-color-swatch, 'blue', 60), // 反转链接色：inverse-02背景的超链接颜色
                icon-01: get-lib-value($lib-color-swatch, 'gray', 10), // 图标色01：主要图标颜色
                icon-02: get-lib-value($lib-color-swatch, 'gray', 30), // 图标色02：次要图标颜色
                icon-03: get-lib-value($lib-color-swatch, 'white', 100), // 图标色03：交互色背景的图标颜色，非UI背景色的图标颜色
                field-01: get-lib-value($lib-color-swatch, 'gray', 90), // 控件背景色01：默认表单元件背景色，ui-background上方控件背景颜色
                field-02: get-lib-value($lib-color-swatch, 'gray', 80), // 控件背景色02：ui-02背景颜色上方控件背景颜色
                inverse-01: get-lib-value($lib-color-swatch, 'gray', 100), // 反转色01：反转文本色、图标色
                inverse-02: get-lib-value($lib-color-swatch, 'gray', 10), // 反转色02：高对比背景色，高对比元素
                support-01: get-lib-value($lib-color-swatch, 'red', 50), // 支持色01：错误色;
                support-02: get-lib-value($lib-color-swatch, 'green', 40), // 支持色02：成功色;
                support-03: get-lib-value($lib-color-swatch, 'yellow', 30), // 支持色03：警告色;
                support-04: get-lib-value($lib-color-swatch, 'blue', 50), // 支持色04：信息色;
                inverse-support-01: get-lib-value($lib-color-swatch, 'red', 60), // 反转支持色01：高对比时的错误色
                inverse-support-02: get-lib-value($lib-color-swatch, 'green', 50), // 反转支持色02：高对比时的成功色
                inverse-support-03: get-lib-value($lib-color-swatch, 'yellow', 30), // 反转支持色03：高对比时的警告色
                inverse-support-04: get-lib-value($lib-color-swatch, 'blue', 70), // 反转支持色04：高对比时的信息色
                overlay-01: rgba(get-lib-value($lib-color-swatch, 'gray', 100), .7), // 覆盖色01：背景覆盖色
                focus: get-lib-value($lib-color-swatch, 'white', 100), // 聚焦色：聚焦边框色，聚焦下划线颜色
                inverse-focus-ui: get-lib-value($lib-color-swatch, 'blue', 60), // 高对比时的聚焦色
                hover-primary: calc-hover-color(get-lib-value($lib-color-swatch, 'blue', 60)), // 主悬停色：interactive-01悬停色，Blue 60 hover
                hover-primary-text: get-lib-value($lib-color-swatch, 'blue', 70), // 主要文本悬停色：interactive-01文本悬停色
                hover-secondary: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 60)), // 次要悬停色：interactive-02悬停色，Gray 80 hover
                hover-tertiary: get-lib-value($lib-color-swatch, 'gray', 10), // 辅助悬停色：interactive-03、inverse-01悬停色
                hover-ui: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 90)), // UI悬停色：ui-01、ui-02、透明背景悬停色，Gray 10 hover
                hover-selected-ui: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 80)), // 选中UI悬停色：选中表格行悬停色，Gray 20 hover
                hover-danger: calc-hover-color(get-lib-value($lib-color-swatch, 'red', 60)), // 危险操作悬停色：危险操作悬停色，support-01悬停色，Red 60 hover
                hover-row: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 90)), // 表格行悬停色：表格行悬停色，Gray 10 hover
                inverse-hover-ui: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 10)), // 反转UI悬停色：inverse-02悬停色，Gray 80 hover
                active-primary: get-lib-value($lib-color-swatch, 'blue', 80), // 主要激活色：interactive-01激活色
                active-secondary: get-lib-value($lib-color-swatch, 'gray', 80), // 次要激活色：interactive-02、inverse-01激活色
                active-tertiary: get-lib-value($lib-color-swatch, 'gray', 30), // 辅助激活色：interactive-03激活色
                active-ui: get-lib-value($lib-color-swatch, 'gray', 70), // UI激活色：ui-01，ui-02激活色
                active-danger: get-lib-value($lib-color-swatch, 'red', 80), //危险激活色：danger，support-01激活色
                selected-ui: get-lib-value($lib-color-swatch, 'gray', 80), // UI选中色：选中的UI元素颜色
                highlight: get-lib-value($lib-color-swatch, 'blue', 90), // 高亮色：interactive-01高亮色
                skeleton-01: calc-hover-color(get-lib-value($lib-color-swatch, 'gray', 80)), // 骨架色01：骨架状态的图像色，Gray 10 hover
                skeleton-02: get-lib-value($lib-color-swatch, 'gray', 80), // 骨架色2：骨架状态的文本色
                visited-link: get-lib-value($lib-color-swatch, 'violet', 40), // 已访问链接色：已访问的链接颜色
                disabled-01: get-lib-value($lib-color-swatch, 'gray', 90), // 失活色01：失活控件，失活背景色，失活边框色
                disabled-02: get-lib-value($lib-color-swatch, 'gray', 80), // 失活色02：disabled-01上方的失活元素，失活标签色，disabled-01上方失活文本色，失活图标色，失活边框色
                disabled-03: get-lib-value($lib-color-swatch, 'gray', 60) // 失活色03：disabled-02上方失活文本色，disabled-02上方失活图标色
        )
) !default;
// 库[主题交互色]
$lib-color-interactive: (
        'primary': get-lib-value($lib-theme-palette, $theme-current, interactive-01),
        'secondary': get-lib-value($lib-theme-palette, $theme-current, interactive-02),
        'tertiary': get-lib-value($lib-theme-palette, $theme-current, interactive-03),
        'danger': get-lib-value($lib-theme-palette, $theme-current, danger),
        'error': get-lib-value($lib-theme-palette, $theme-current, support-01),
        'success': get-lib-value($lib-theme-palette, $theme-current, support-02),
        'warning': get-lib-value($lib-theme-palette, $theme-current, support-03),
        'info': get-lib-value($lib-theme-palette, $theme-current, support-04),
        'white': $color-absolute-white,
        'light': get-lib-value($lib-color-swatch, 'gray', 20),
        'dark': get-lib-value($lib-color-swatch, 'gray', 80),
        'black': $color-absolute-black
) !default;
// 从交互颜色族中取值
@function get-interactive-colors($key: 'primary') {
  @return map-get($lib-color-interactive, $key);
}
// 函数相关颜色变量 retrieve color form maps
// 颜色对比度
$yiq-contrasted-threshold: 150 !default; // The yiq lightness value that determines when the lightness of color changes from "dark" to "light". Acceptable values are between 0 and 255.
$yiq-text-dark: get-lib-value($lib-theme-palette, $theme-current, text-01); // Customize the light and dark text colors for use in our YIQ color contrast function.
$yiq-text-light: get-lib-value($lib-theme-palette, $theme-current, text-04); // Customize the light and dark text colors for use in our YIQ color contrast function.
$theme-color-interval: 8% !default; // Set a specific jump point for requesting color jumps

// 计算对应颜色的对比度背景
@function get-color-yiq($color, $dark: $yiq-text-dark, $light: $yiq-text-light) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);
  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;
  @if ($yiq >= $yiq-contrasted-threshold) {
    @return $dark;
  } @else {
    @return $light;
  }
}

// 混合颜色
@function theme-color-level($color-name: 'primary', $level: 0) {
  $color: get-interactive-colors($color-name);
  $color-base: if($level > 0, map-get($lib-color-interactive, 'black'), map-get($lib-color-interactive, 'white'));
  $level: abs($level);
  @return mix($color-base, $color, $level * $theme-color-interval);
}
